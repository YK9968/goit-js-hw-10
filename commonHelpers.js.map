{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst date = Date.now();\nlet userSelectedDate;\nconst inputValueTimer = document.querySelector('#datetime-picer');\nconst startBtn = document.querySelector('button[data-start]');\nconst dataValueDays = document.querySelector('span[data-days]');\nconst dataValueHours = document.querySelector('span[data-hours]');\nconst dataValueMinutes = document.querySelector('span[data-minutes]');\nconst dataValueSeconds = document.querySelector('span[data-seconds]');\n\nstartBtn.setAttribute('disabled', '');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < date) {\n      window.alert('Please choose a date in the future');\n      startBtn.setAttribute('disabled', '');\n    } else {\n      startBtn.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n      updateTimerValue;\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  if (value < 10) {\n    return String(value).padStart(2, '0');\n  } else {\n    return value;\n  }\n}\n\nfunction updateTimerValue() {\n  const { days, hours, minutes, seconds } = convertMs(\n    userSelectedDate - Date.now()\n  );\n  dataValueDays.textContent = addLeadingZero(days);\n  dataValueHours.textContent = addLeadingZero(hours);\n  dataValueMinutes.textContent = addLeadingZero(minutes);\n  dataValueSeconds.textContent = addLeadingZero(seconds);\n  const changeDateValue = setInterval(updateTimerValue, 1000);\n}\n\nstartBtn.addEventListener('click', updateTimerValue);\n"],"names":["date","userSelectedDate","startBtn","dataValueDays","dataValueHours","dataValueMinutes","dataValueSeconds","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerValue"],"mappings":"oGAGA,MAAMA,EAAO,KAAK,MAClB,IAAIC,EACoB,SAAS,cAAc,iBAAiB,EAChE,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAgB,SAAS,cAAc,iBAAiB,EACxDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAmB,SAAS,cAAc,oBAAoB,EAC9DC,EAAmB,SAAS,cAAc,oBAAoB,EAEpEJ,EAAS,aAAa,WAAY,EAAE,EAEpC,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAIR,GACrB,OAAO,MAAM,oCAAoC,EACjDE,EAAS,aAAa,WAAY,EAAE,IAEpCA,EAAS,gBAAgB,UAAU,EACnCD,EAAmBO,EAAc,CAAC,EAGrC,CACH,EAEWC,EAAU,mBAAoBF,CAAO,EAEhD,SAASG,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAIA,EAAQ,GACH,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE7BA,CAEX,CAEA,SAASC,GAAmB,CAC1B,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EACxCT,EAAmB,KAAK,IAAK,CACjC,EACEE,EAAc,YAAca,EAAeJ,CAAI,EAC/CR,EAAe,YAAcY,EAAeH,CAAK,EACjDR,EAAiB,YAAcW,EAAeF,CAAO,EACrDR,EAAiB,YAAcU,EAAeD,CAAO,EAC7B,YAAYG,EAAkB,GAAI,CAC5D,CAEAhB,EAAS,iBAAiB,QAASgB,CAAgB"}